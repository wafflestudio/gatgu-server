packages:
  yum:
    jq: []

files:
  "/usr/local/bin/check_leader.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" 2>/dev/null`
      INSTANCE_ID=`curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null`
      REGION=`curl -H "X-aws-ec2-metadata-token: $TOKEN" -s http://169.254.169.254/latest/dynamic/instance-identity/document 2>/dev/null | jq -r .region`

      # Find the Auto Scaling Group name from the Elastic Beanstalk environment
      ASG=`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" \
          --region $REGION --output json | jq -r '.[][] | select(.Key=="aws:autoscaling:groupName") | .Value'`

      # Find the first instance in the Auto Scaling Group
      FIRST=`aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG \
          --region $REGION --output json | \
          jq -r '.AutoScalingGroups[].Instances[] | select(.LifecycleState=="InService") | .InstanceId' | sort | head -1`

      # If the instance ids are the same exit 0
      [ "$FIRST" = "$INSTANCE_ID" ]
      
  "/usr/local/bin/cron_test.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      /usr/local/bin/check_leader.sh || exit
      # Now run commands that should run on only 1 instance.
      CONTAINER=`sudo docker ps | awk '$1!="CONTAINER" {print $1}'`
      # Test in progess
      sudo docker exec $CONTAINER echo "'hello world' testing...log"

  "/etc/cron.d/cron_test":
    mode: "000644"
    owner: root
    group: root
    content: |
      * * * * * root /usr/local/bin/cron_test.sh
      * * * * * root /usr/local/bin/cron_test.sh

commands:
  rm_old_cron:
    command: "rm -fr /etc/cron.d/cron_test.bak"
    ignoreErrors: true

